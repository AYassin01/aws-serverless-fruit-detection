AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Fruit Disease Detection with AWS Bedrock

Parameters:
  ProjectName:
    Type: String
    Default: "fruit-disease-detection"
  Stage:
    Type: String
    Default: "dev"
    AllowedValues:
      - dev
      - test
      - prod

Globals:
  Function:
    Timeout: 30
    MemorySize: 512
    Runtime: python3.9
    Architectures:
      - x86_64

Resources:
  # IAM Role for Lambda execution with Bedrock permissions
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: BedrockAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - bedrock:InvokeModel
                Resource:
                  - !Sub "arn:aws:bedrock:${AWS::Region}::foundation-model/anthropic.claude-3-5-sonnet-20240620-v1:0" 
                  # - !Sub "arn:aws:bedrock:${AWS::Region}::foundation-model/anthropic.claude-3-haiku-20240307-v1:0"


  # Lambda function for disease detection
  DiseaseDetectionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src
      Handler: lambda_function.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Layers:
        - !Ref Boto3Layer
      Environment:
        Variables:
          MODEL_ID: anthropic.claude-3-5-sonnet-20240620-v1:0
          LOG_LEVEL: INFO
      Events:
        ApiEvent:
          Type: Api # This creates an API Gateway REST API
          Properties:
            Path: /detect
            Method: post

  # Boto3 Layer for Bedrock compatibility
  Boto3Layer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub "${ProjectName}-boto3-layer-${Stage}"
      Description: Layer containing specific boto3 version for Bedrock
      ContentUri: ./boto3_layer # This is a directory SAM will expect
      CompatibleRuntimes:
        - python3.9
      RetentionPolicy: Retain # Change to Delete if you don't want to keep old versions

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL for disease detection"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/detect"
  FunctionName:
    Description: "Disease Detection Lambda Function"
    Value: !Ref DiseaseDetectionFunction
  LambdaRoleArn:
    Description: "IAM Role ARN for the Lambda function"
    Value: !GetAtt LambdaExecutionRole.Arn